---
name: microflow-execution

on:
  workflow_dispatch:
    inputs:
      autor_proyecto:
        description: 'Autor/proyecto a analizar'
        required: true
        default: ''

jobs:
  retrieve-project:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout input project
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.autor_proyecto }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add project to directory
        run: mkdir ../project && mv * ../project && mv ../project .

      - uses: actions/upload-artifact@v3
        with:
          name: project
          path: .

  sonarqube-scanner:
    runs-on: ubuntu-20.04
    needs: retrieve-project
    steps:
      - name: Checkout microflow project
        uses: actions/checkout@v3

      - name: Get project
        id: get-project
        uses: actions/download-artifact@v3
        with:
          name: project

      - name: Docker compose up
        run: PROJECT_PATH=./project docker-compose up -d

      - name: Retrieve scanner results
        run: |
          while [[ $(docker container ps -q -f status=exited) == "" ]]; do
            true
          done
        
      - name: setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
          cache: 'pip'

      - name: Install python dependencies
        run: pip install -r maven_sonarscanner/requirements.txt

      - name: Get analysis results via SonarQube API
        run: |
          python maven_sonarscanner/generate-results.py
          mkdir scanner_results
          mv results_markdown.md scanner_results/
          mv charts.html scanner_results/

      - name: Save scanner results
        uses: actions/upload-artifact@v3
        with:
          name: scanner_results
          path: ./scanner_results

      - name: Docker compose down
        run: docker-compose down -v

  checkstyle-spotbugs:
    needs: retrieve-project
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout microflow project
        uses: actions/checkout@v3

      - name: Get project
        id: get-project
        uses: actions/download-artifact@v3
        with:
          name: project

      - name: Checkstyle execution and result publishing
        run: |
          cd project
          docker run --rm --workdir /app -v"$(pwd)":/app maven:3.8.5-jdk-8 sh -c "mvn checkstyle:checkstyle-aggregate"
          mkdir checkstyle_results
          cp ./target/site/checkstyle-aggregate.html checkstyle_results/
          ls checkstyle_results

      - name: Save scanner results
        uses: actions/upload-artifact@v3
        with:
          path: ./checkstyle_results
          name: checkstyle_results

  web-update:
    runs-on: ubuntu-20.04
    needs: [sonarqube-scanner, checkstyle-spotbugs]
    steps:
      - name: Checkout to ghpages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages

      - name: Get results Sonar scanner
        id: get-results-scanner
        uses: actions/download-artifact@v3
        with:
          name: scanner_results

      - name: Get results checkstyle
        id: get-results-checkstyle
        uses: actions/download-artifact@v3
        with:
          name: checkstyle_results

      - name: Update github page
        continue-on-error: true
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          mv -f scanner_results/results_markdown.md index.md
          mv -f scanner_results/charts.html _includes/charts.html
          mv -f checkstyle_results/checkstyle-aggregate.html checkstyle-aggregate.html

          git add index.md _includes/charts.html checkstyle-aggregate.html
          git commit -m "Updated gh page with ${{ github.event.inputs.autor_proyecto }} analysis"

          git push
