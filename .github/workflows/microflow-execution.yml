---
name: microflow-execution

on:
  workflow_dispatch:
    inputs:
      autor_proyecto:
        description: 'Autor/proyecto a analizar'
        required: true
        default: ''

jobs:
  retrieve-project:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout input project
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.autor_proyecto }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add project to directory
        run: mkdir ../project && mv * ../project && mv ../project .

      - uses: actions/upload-artifact@v3
        with:
          name: project
          path: .
          token: gasoilprueba

  sonarqube-scanner:
    runs-on: ubuntu-20.04
    needs: retrieve-project
    steps:
      - name: Checkout microflow project
        uses: actions/checkout@v3

      - name: Get project
        id: get-project
        uses: actions/download-artifact@v3
        with:
          name: project

      - name: Docker compose up
        run: PROJECT_PATH=./project docker-compose up -d

      - name: Retrieve scanner results
        run: |
          while [[ $(docker container ps -q -f status=exited) == "" ]]; do
            true
          done

      - name: setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
          cache: 'pip'

      - name: Install python dependencies
        run: pip install -r maven_sonarscanner/requirements.txt

      - name: Get analysis results via SonarQube API
        run: |
          python maven_sonarscanner/generate-results.py
          mkdir scanner_results
          mv *results.md scanner_results/
          mv *charts.html scanner_results/

      - name: Save scanner results
        uses: actions/upload-artifact@v3
        with:
          name: scanner_results
          path: ./scanner_results

      - name: Docker compose down
        run: docker-compose down -v

  checkstyle-spotbugs:
    needs: retrieve-project
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout microflow project
        uses: actions/checkout@v3

      - name: Get project
        id: get-project
        uses: actions/download-artifact@v3
        with:
          name: project

      - name: Checkstyle execution and result publishing
        run: |
          cd project
          docker run --rm --workdir /app -v"$(pwd)":/app maven:3.8.5-jdk-8 sh -c "mvn checkstyle:checkstyle-aggregate"
          mkdir checkstyle_results
          cp -r ./target/site checkstyle_results/

      - name: Save checkstyle results
        uses: actions/upload-artifact@v3
        with:
          name: checkstyle_results
          path: ./project/checkstyle_results

      - name: setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
          cache: 'pip'

      - name: Install python dependencies
        run: pip install -r maven_sonarscanner/requirements.txt

      - name: Spotbugs execution and result publishing
        run: |
          cd project
          results=$(docker run --rm --workdir /app -v"$(pwd)":/app maven:3.8.5-jdk-8 sh -c "mvn clean compile com.github.spotbugs:spotbugs-maven-plugin:4.6.0.0:check -DincludeTests=true -Dplugins=com.h3xstream.findsecbugs:findsecbugs-plugin:LATEST -fn")
          mkdir spotbugs_results
          export bugs=$(echo "$results" | grep ERROR | grep line)
          python ../spotbugs/generate-spotbugs-results.py
          mv *bug_report.md spotbugs_results/

          if [[ -z $(echo $results | grep "BugInstance size is") ]]; then
            echo "## NO BUGS FOUND IN THE PROJECT" > spotbugs_results/*bug_report.md
          fi

      - name: Save spotbugs results
        uses: actions/upload-artifact@v3
        with:
          name: spotbugs_results
          path: ./project/spotbugs_results

  web-update:
    runs-on: ubuntu-20.04
    needs: [sonarqube-scanner, checkstyle-spotbugs]
    steps:
      - name: Checkout to ghpages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages

      - name: Get results Sonar scanner
        id: get-results-scanner
        uses: actions/download-artifact@v3
        with:
          name: scanner_results

      - name: Get results checkstyle
        id: get-results-checkstyle
        uses: actions/download-artifact@v3
        with:
          name: checkstyle_results

      - name: Get results spotbugs
        id: get-results-spotbugs
        uses: actions/download-artifact@v3
        with:
          name: spotbugs_results

      - name: Update github page
        continue-on-error: true
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          sonar_file=$(ls . | grep *results.md)
          charts_file=$(ls . | grep *charts.html)
          mv -f "$sonar_file" _posts/
          mv -f "$charts_file" _includes/

          spotbugs_file=$(ls . | grep *bug_report.md)
          mkdir analysis_history/${sonar_file%%-results.md}
          mv -f $spotbugs_file analysis_history/${sonar_file%%-results.md}
          mv -f site/checkstyle-aggregate.html analysis_history/${sonar_file%%-results.md}/${sonar_file%%-results.md}-checkstyle-aggregate.html

          urls="<section id=\"downloads\"><a href=\"https://pablocollazoc.github.io/microflow/${sonar_file%%-results.md}/checkstyle\" class=\"btn\">Checkstyle results</a><a href=\"https://pablocollazoc.github.io/microflow/${sonar_file%%-results.md}/spotbugs\" class=\"btn\">Spotbugs results</a><a href=\"{{ site.github.repository_url }}\" class=\"btn btn-github\"><span class=\"icon\"></span>View on GitHub</a></section>"

          sed -i "1s|^|---\nlayout: default\n---\n${urls}\n\n |" _posts/$sonar_file

          sed -i "1s|^|---\nlayout: default\ntitle: Checkstyle\npermalink: \/${sonar_file%%-results.md}\/checkstyle\/\n---\n<section id=\"downloads\"><a onclick=\"window.history.back\(\)\">Back</a></section>\n\n |" analysis_history/${sonar_file%%-results.md}/${sonar_file%%-results.md}-checkstyle-aggregate.html

          sed -i "1s|^|---\nlayout: default\ntitle: Spotbugs\npermalink: \/${sonar_file%%-results.md}\/spotbugs\/\n---\n<section id=\"downloads\">  \n<a onclick=\"window.history.back\(\)\">Back</a></section>\n\n |" analysis_history/${sonar_file%%-results.md}/$spotbugs_file

          git add _posts _includes analysis_history/
          git commit -m "Updated gh page with ${{ github.event.inputs.autor_proyecto }} analysis"

          git push
